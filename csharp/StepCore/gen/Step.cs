// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/step.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from proto/step.proto</summary>
public static partial class StepReflection {

  #region Descriptor
  /// <summary>File descriptor for proto/step.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static StepReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChBwcm90by9zdGVwLnByb3RvInYKEENhY2hlUHVzaFJlcXVlc3QSCgoCaWQY",
          "ASABKAkSEAoIbWV0YWRhdGEYAiABKAwSDgoGcmVjb3JkGAMgASgMEhEKCWNh",
          "Y2hlTmFtZRgEIAEoCRIhCgtlbnZpcm9ubWVudBgFIAEoCzIMLkVudmlyb25t",
          "ZW50IhMKEUNhY2hlUHVzaFJlc3BvbnNlIncKC0Vudmlyb25tZW50EgsKA2Fw",
          "cBgBIAEoCRISCgp3b3JrZmxvd0lkGAIgASgJEg0KBXJ1bklkGAMgASgJEhAK",
          "CHN0ZXBOYW1lGAQgASgJEhMKC3N0ZXBWZXJzaW9uGAUgASgJEhEKCWlucHV0",
          "RmlsZRgGIAEoCSJUChBDYWNoZVB1bGxSZXF1ZXN0EgoKAmlkGAEgASgJEhEK",
          "CWNhY2hlTmFtZRgCIAEoCRIhCgtlbnZpcm9ubWVudBgDIAEoCzIMLkVudmly",
          "b25tZW50IkcKEUNhY2hlUHVsbFJlc3BvbnNlEg4KBnJlY29yZBgBIAEoDBIQ",
          "CghtZXRhZGF0YRgCIAEoDBIQCghub3RGb3VuZBgDIAEoCCKkAQoHUGFja2Fn",
          "ZRIMCgRuYW1lGAEgASgJEgwKBGxhbmcYAiABKAkSDwoHdmVyc2lvbhgDIAEo",
          "CRIMCgRleGVjGAQgASgJEiIKBXN0ZXBzGAUgAygLMhMuUGFja2FnZS5TdGVw",
          "c0VudHJ5GjoKClN0ZXBzRW50cnkSCwoDa2V5GAEgASgJEhsKBXZhbHVlGAIg",
          "ASgLMgwuUGFja2FnZVN0ZXA6AjgBIvABCgtQYWNrYWdlU3RlcBITCgtkZXNj",
          "cmlwdGlvbhgBIAEoCRIoCgZpbnB1dHMYAiADKAsyGC5QYWNrYWdlU3RlcC5J",
          "bnB1dHNFbnRyeRIqCgdvdXRwdXRzGAMgAygLMhkuUGFja2FnZVN0ZXAuT3V0",
          "cHV0c0VudHJ5GjkKC0lucHV0c0VudHJ5EgsKA2tleRgBIAEoCRIZCgV2YWx1",
          "ZRgCIAEoCzIKLklucHV0SW5mbzoCOAEaOwoMT3V0cHV0c0VudHJ5EgsKA2tl",
          "eRgBIAEoCRIaCgV2YWx1ZRgCIAEoCzILLk91dHB1dEluZm86AjgBIjIKCUlu",
          "cHV0SW5mbxIQCghyZXF1aXJlZBgBIAEoCBITCgtkZXNjcmlwdGlvbhgCIAEo",
          "CSIhCgpPdXRwdXRJbmZvEhMKC2Rlc2NyaXB0aW9uGAEgASgJMmUKBUNhY2hl",
          "Ei0KBFB1c2gSES5DYWNoZVB1c2hSZXF1ZXN0GhIuQ2FjaGVQdXNoUmVzcG9u",
          "c2USLQoEUHVsbBIRLkNhY2hlUHVsbFJlcXVlc3QaEi5DYWNoZVB1bGxSZXNw",
          "b25zZUIxWi9naXRodWIuY29tL2FwcHRyZWVzb2Z0d2FyZS9nby13b3JrZmxv",
          "dy9wa2cvc3RlcGIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CachePushRequest), global::CachePushRequest.Parser, new[]{ "Id", "Metadata", "Record", "CacheName", "Environment" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CachePushResponse), global::CachePushResponse.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Environment), global::Environment.Parser, new[]{ "App", "WorkflowId", "RunId", "StepName", "StepVersion", "InputFile" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CachePullRequest), global::CachePullRequest.Parser, new[]{ "Id", "CacheName", "Environment" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CachePullResponse), global::CachePullResponse.Parser, new[]{ "Record", "Metadata", "NotFound" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Package), global::Package.Parser, new[]{ "Name", "Lang", "Version", "Exec", "Steps" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::PackageStep), global::PackageStep.Parser, new[]{ "Description", "Inputs", "Outputs" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::InputInfo), global::InputInfo.Parser, new[]{ "Required", "Description" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::OutputInfo), global::OutputInfo.Parser, new[]{ "Description" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class CachePushRequest : pb::IMessage<CachePushRequest> {
  private static readonly pb::MessageParser<CachePushRequest> _parser = new pb::MessageParser<CachePushRequest>(() => new CachePushRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CachePushRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StepReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePushRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePushRequest(CachePushRequest other) : this() {
    id_ = other.id_;
    metadata_ = other.metadata_;
    record_ = other.record_;
    cacheName_ = other.cacheName_;
    environment_ = other.environment_ != null ? other.environment_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePushRequest Clone() {
    return new CachePushRequest(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "metadata" field.</summary>
  public const int MetadataFieldNumber = 2;
  private pb::ByteString metadata_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Metadata {
    get { return metadata_; }
    set {
      metadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "record" field.</summary>
  public const int RecordFieldNumber = 3;
  private pb::ByteString record_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Record {
    get { return record_; }
    set {
      record_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "cacheName" field.</summary>
  public const int CacheNameFieldNumber = 4;
  private string cacheName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CacheName {
    get { return cacheName_; }
    set {
      cacheName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "environment" field.</summary>
  public const int EnvironmentFieldNumber = 5;
  private global::Environment environment_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Environment Environment {
    get { return environment_; }
    set {
      environment_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CachePushRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CachePushRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Metadata != other.Metadata) return false;
    if (Record != other.Record) return false;
    if (CacheName != other.CacheName) return false;
    if (!object.Equals(Environment, other.Environment)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (Metadata.Length != 0) hash ^= Metadata.GetHashCode();
    if (Record.Length != 0) hash ^= Record.GetHashCode();
    if (CacheName.Length != 0) hash ^= CacheName.GetHashCode();
    if (environment_ != null) hash ^= Environment.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (Metadata.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Metadata);
    }
    if (Record.Length != 0) {
      output.WriteRawTag(26);
      output.WriteBytes(Record);
    }
    if (CacheName.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(CacheName);
    }
    if (environment_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(Environment);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (Metadata.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Metadata);
    }
    if (Record.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Record);
    }
    if (CacheName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CacheName);
    }
    if (environment_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Environment);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CachePushRequest other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.Metadata.Length != 0) {
      Metadata = other.Metadata;
    }
    if (other.Record.Length != 0) {
      Record = other.Record;
    }
    if (other.CacheName.Length != 0) {
      CacheName = other.CacheName;
    }
    if (other.environment_ != null) {
      if (environment_ == null) {
        environment_ = new global::Environment();
      }
      Environment.MergeFrom(other.Environment);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 18: {
          Metadata = input.ReadBytes();
          break;
        }
        case 26: {
          Record = input.ReadBytes();
          break;
        }
        case 34: {
          CacheName = input.ReadString();
          break;
        }
        case 42: {
          if (environment_ == null) {
            environment_ = new global::Environment();
          }
          input.ReadMessage(environment_);
          break;
        }
      }
    }
  }

}

public sealed partial class CachePushResponse : pb::IMessage<CachePushResponse> {
  private static readonly pb::MessageParser<CachePushResponse> _parser = new pb::MessageParser<CachePushResponse>(() => new CachePushResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CachePushResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StepReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePushResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePushResponse(CachePushResponse other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePushResponse Clone() {
    return new CachePushResponse(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CachePushResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CachePushResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CachePushResponse other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class Environment : pb::IMessage<Environment> {
  private static readonly pb::MessageParser<Environment> _parser = new pb::MessageParser<Environment>(() => new Environment());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Environment> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StepReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Environment() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Environment(Environment other) : this() {
    app_ = other.app_;
    workflowId_ = other.workflowId_;
    runId_ = other.runId_;
    stepName_ = other.stepName_;
    stepVersion_ = other.stepVersion_;
    inputFile_ = other.inputFile_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Environment Clone() {
    return new Environment(this);
  }

  /// <summary>Field number for the "app" field.</summary>
  public const int AppFieldNumber = 1;
  private string app_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string App {
    get { return app_; }
    set {
      app_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "workflowId" field.</summary>
  public const int WorkflowIdFieldNumber = 2;
  private string workflowId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string WorkflowId {
    get { return workflowId_; }
    set {
      workflowId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "runId" field.</summary>
  public const int RunIdFieldNumber = 3;
  private string runId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RunId {
    get { return runId_; }
    set {
      runId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "stepName" field.</summary>
  public const int StepNameFieldNumber = 4;
  private string stepName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string StepName {
    get { return stepName_; }
    set {
      stepName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "stepVersion" field.</summary>
  public const int StepVersionFieldNumber = 5;
  private string stepVersion_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string StepVersion {
    get { return stepVersion_; }
    set {
      stepVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "inputFile" field.</summary>
  public const int InputFileFieldNumber = 6;
  private string inputFile_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string InputFile {
    get { return inputFile_; }
    set {
      inputFile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Environment);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Environment other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (App != other.App) return false;
    if (WorkflowId != other.WorkflowId) return false;
    if (RunId != other.RunId) return false;
    if (StepName != other.StepName) return false;
    if (StepVersion != other.StepVersion) return false;
    if (InputFile != other.InputFile) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (App.Length != 0) hash ^= App.GetHashCode();
    if (WorkflowId.Length != 0) hash ^= WorkflowId.GetHashCode();
    if (RunId.Length != 0) hash ^= RunId.GetHashCode();
    if (StepName.Length != 0) hash ^= StepName.GetHashCode();
    if (StepVersion.Length != 0) hash ^= StepVersion.GetHashCode();
    if (InputFile.Length != 0) hash ^= InputFile.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (App.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(App);
    }
    if (WorkflowId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(WorkflowId);
    }
    if (RunId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(RunId);
    }
    if (StepName.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(StepName);
    }
    if (StepVersion.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(StepVersion);
    }
    if (InputFile.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(InputFile);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (App.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(App);
    }
    if (WorkflowId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkflowId);
    }
    if (RunId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RunId);
    }
    if (StepName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(StepName);
    }
    if (StepVersion.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(StepVersion);
    }
    if (InputFile.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(InputFile);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Environment other) {
    if (other == null) {
      return;
    }
    if (other.App.Length != 0) {
      App = other.App;
    }
    if (other.WorkflowId.Length != 0) {
      WorkflowId = other.WorkflowId;
    }
    if (other.RunId.Length != 0) {
      RunId = other.RunId;
    }
    if (other.StepName.Length != 0) {
      StepName = other.StepName;
    }
    if (other.StepVersion.Length != 0) {
      StepVersion = other.StepVersion;
    }
    if (other.InputFile.Length != 0) {
      InputFile = other.InputFile;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          App = input.ReadString();
          break;
        }
        case 18: {
          WorkflowId = input.ReadString();
          break;
        }
        case 26: {
          RunId = input.ReadString();
          break;
        }
        case 34: {
          StepName = input.ReadString();
          break;
        }
        case 42: {
          StepVersion = input.ReadString();
          break;
        }
        case 50: {
          InputFile = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class CachePullRequest : pb::IMessage<CachePullRequest> {
  private static readonly pb::MessageParser<CachePullRequest> _parser = new pb::MessageParser<CachePullRequest>(() => new CachePullRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CachePullRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StepReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePullRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePullRequest(CachePullRequest other) : this() {
    id_ = other.id_;
    cacheName_ = other.cacheName_;
    environment_ = other.environment_ != null ? other.environment_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePullRequest Clone() {
    return new CachePullRequest(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "cacheName" field.</summary>
  public const int CacheNameFieldNumber = 2;
  private string cacheName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CacheName {
    get { return cacheName_; }
    set {
      cacheName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "environment" field.</summary>
  public const int EnvironmentFieldNumber = 3;
  private global::Environment environment_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Environment Environment {
    get { return environment_; }
    set {
      environment_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CachePullRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CachePullRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (CacheName != other.CacheName) return false;
    if (!object.Equals(Environment, other.Environment)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (CacheName.Length != 0) hash ^= CacheName.GetHashCode();
    if (environment_ != null) hash ^= Environment.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (CacheName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CacheName);
    }
    if (environment_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Environment);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (CacheName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CacheName);
    }
    if (environment_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Environment);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CachePullRequest other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.CacheName.Length != 0) {
      CacheName = other.CacheName;
    }
    if (other.environment_ != null) {
      if (environment_ == null) {
        environment_ = new global::Environment();
      }
      Environment.MergeFrom(other.Environment);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 18: {
          CacheName = input.ReadString();
          break;
        }
        case 26: {
          if (environment_ == null) {
            environment_ = new global::Environment();
          }
          input.ReadMessage(environment_);
          break;
        }
      }
    }
  }

}

public sealed partial class CachePullResponse : pb::IMessage<CachePullResponse> {
  private static readonly pb::MessageParser<CachePullResponse> _parser = new pb::MessageParser<CachePullResponse>(() => new CachePullResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CachePullResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StepReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePullResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePullResponse(CachePullResponse other) : this() {
    record_ = other.record_;
    metadata_ = other.metadata_;
    notFound_ = other.notFound_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePullResponse Clone() {
    return new CachePullResponse(this);
  }

  /// <summary>Field number for the "record" field.</summary>
  public const int RecordFieldNumber = 1;
  private pb::ByteString record_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Record {
    get { return record_; }
    set {
      record_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "metadata" field.</summary>
  public const int MetadataFieldNumber = 2;
  private pb::ByteString metadata_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Metadata {
    get { return metadata_; }
    set {
      metadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "notFound" field.</summary>
  public const int NotFoundFieldNumber = 3;
  private bool notFound_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool NotFound {
    get { return notFound_; }
    set {
      notFound_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CachePullResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CachePullResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Record != other.Record) return false;
    if (Metadata != other.Metadata) return false;
    if (NotFound != other.NotFound) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Record.Length != 0) hash ^= Record.GetHashCode();
    if (Metadata.Length != 0) hash ^= Metadata.GetHashCode();
    if (NotFound != false) hash ^= NotFound.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Record.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(Record);
    }
    if (Metadata.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Metadata);
    }
    if (NotFound != false) {
      output.WriteRawTag(24);
      output.WriteBool(NotFound);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Record.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Record);
    }
    if (Metadata.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Metadata);
    }
    if (NotFound != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CachePullResponse other) {
    if (other == null) {
      return;
    }
    if (other.Record.Length != 0) {
      Record = other.Record;
    }
    if (other.Metadata.Length != 0) {
      Metadata = other.Metadata;
    }
    if (other.NotFound != false) {
      NotFound = other.NotFound;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Record = input.ReadBytes();
          break;
        }
        case 18: {
          Metadata = input.ReadBytes();
          break;
        }
        case 24: {
          NotFound = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class Package : pb::IMessage<Package> {
  private static readonly pb::MessageParser<Package> _parser = new pb::MessageParser<Package>(() => new Package());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Package> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StepReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Package() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Package(Package other) : this() {
    name_ = other.name_;
    lang_ = other.lang_;
    version_ = other.version_;
    exec_ = other.exec_;
    steps_ = other.steps_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Package Clone() {
    return new Package(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "lang" field.</summary>
  public const int LangFieldNumber = 2;
  private string lang_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Lang {
    get { return lang_; }
    set {
      lang_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "version" field.</summary>
  public const int VersionFieldNumber = 3;
  private string version_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Version {
    get { return version_; }
    set {
      version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "exec" field.</summary>
  public const int ExecFieldNumber = 4;
  private string exec_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Exec {
    get { return exec_; }
    set {
      exec_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "steps" field.</summary>
  public const int StepsFieldNumber = 5;
  private static readonly pbc::MapField<string, global::PackageStep>.Codec _map_steps_codec
      = new pbc::MapField<string, global::PackageStep>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::PackageStep.Parser), 42);
  private readonly pbc::MapField<string, global::PackageStep> steps_ = new pbc::MapField<string, global::PackageStep>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<string, global::PackageStep> Steps {
    get { return steps_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Package);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Package other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (Lang != other.Lang) return false;
    if (Version != other.Version) return false;
    if (Exec != other.Exec) return false;
    if (!Steps.Equals(other.Steps)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Lang.Length != 0) hash ^= Lang.GetHashCode();
    if (Version.Length != 0) hash ^= Version.GetHashCode();
    if (Exec.Length != 0) hash ^= Exec.GetHashCode();
    hash ^= Steps.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (Lang.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Lang);
    }
    if (Version.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Version);
    }
    if (Exec.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Exec);
    }
    steps_.WriteTo(output, _map_steps_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Lang.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Lang);
    }
    if (Version.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
    }
    if (Exec.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Exec);
    }
    size += steps_.CalculateSize(_map_steps_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Package other) {
    if (other == null) {
      return;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Lang.Length != 0) {
      Lang = other.Lang;
    }
    if (other.Version.Length != 0) {
      Version = other.Version;
    }
    if (other.Exec.Length != 0) {
      Exec = other.Exec;
    }
    steps_.Add(other.steps_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 18: {
          Lang = input.ReadString();
          break;
        }
        case 26: {
          Version = input.ReadString();
          break;
        }
        case 34: {
          Exec = input.ReadString();
          break;
        }
        case 42: {
          steps_.AddEntriesFrom(input, _map_steps_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class PackageStep : pb::IMessage<PackageStep> {
  private static readonly pb::MessageParser<PackageStep> _parser = new pb::MessageParser<PackageStep>(() => new PackageStep());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PackageStep> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StepReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PackageStep() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PackageStep(PackageStep other) : this() {
    description_ = other.description_;
    inputs_ = other.inputs_.Clone();
    outputs_ = other.outputs_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PackageStep Clone() {
    return new PackageStep(this);
  }

  /// <summary>Field number for the "description" field.</summary>
  public const int DescriptionFieldNumber = 1;
  private string description_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Description {
    get { return description_; }
    set {
      description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "inputs" field.</summary>
  public const int InputsFieldNumber = 2;
  private static readonly pbc::MapField<string, global::InputInfo>.Codec _map_inputs_codec
      = new pbc::MapField<string, global::InputInfo>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::InputInfo.Parser), 18);
  private readonly pbc::MapField<string, global::InputInfo> inputs_ = new pbc::MapField<string, global::InputInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<string, global::InputInfo> Inputs {
    get { return inputs_; }
  }

  /// <summary>Field number for the "outputs" field.</summary>
  public const int OutputsFieldNumber = 3;
  private static readonly pbc::MapField<string, global::OutputInfo>.Codec _map_outputs_codec
      = new pbc::MapField<string, global::OutputInfo>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::OutputInfo.Parser), 26);
  private readonly pbc::MapField<string, global::OutputInfo> outputs_ = new pbc::MapField<string, global::OutputInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<string, global::OutputInfo> Outputs {
    get { return outputs_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PackageStep);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PackageStep other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Description != other.Description) return false;
    if (!Inputs.Equals(other.Inputs)) return false;
    if (!Outputs.Equals(other.Outputs)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Description.Length != 0) hash ^= Description.GetHashCode();
    hash ^= Inputs.GetHashCode();
    hash ^= Outputs.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Description.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Description);
    }
    inputs_.WriteTo(output, _map_inputs_codec);
    outputs_.WriteTo(output, _map_outputs_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Description.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
    }
    size += inputs_.CalculateSize(_map_inputs_codec);
    size += outputs_.CalculateSize(_map_outputs_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PackageStep other) {
    if (other == null) {
      return;
    }
    if (other.Description.Length != 0) {
      Description = other.Description;
    }
    inputs_.Add(other.inputs_);
    outputs_.Add(other.outputs_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Description = input.ReadString();
          break;
        }
        case 18: {
          inputs_.AddEntriesFrom(input, _map_inputs_codec);
          break;
        }
        case 26: {
          outputs_.AddEntriesFrom(input, _map_outputs_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class InputInfo : pb::IMessage<InputInfo> {
  private static readonly pb::MessageParser<InputInfo> _parser = new pb::MessageParser<InputInfo>(() => new InputInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InputInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StepReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InputInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InputInfo(InputInfo other) : this() {
    required_ = other.required_;
    description_ = other.description_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InputInfo Clone() {
    return new InputInfo(this);
  }

  /// <summary>Field number for the "required" field.</summary>
  public const int RequiredFieldNumber = 1;
  private bool required_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Required {
    get { return required_; }
    set {
      required_ = value;
    }
  }

  /// <summary>Field number for the "description" field.</summary>
  public const int DescriptionFieldNumber = 2;
  private string description_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Description {
    get { return description_; }
    set {
      description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InputInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InputInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Required != other.Required) return false;
    if (Description != other.Description) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Required != false) hash ^= Required.GetHashCode();
    if (Description.Length != 0) hash ^= Description.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Required != false) {
      output.WriteRawTag(8);
      output.WriteBool(Required);
    }
    if (Description.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Description);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Required != false) {
      size += 1 + 1;
    }
    if (Description.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InputInfo other) {
    if (other == null) {
      return;
    }
    if (other.Required != false) {
      Required = other.Required;
    }
    if (other.Description.Length != 0) {
      Description = other.Description;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Required = input.ReadBool();
          break;
        }
        case 18: {
          Description = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class OutputInfo : pb::IMessage<OutputInfo> {
  private static readonly pb::MessageParser<OutputInfo> _parser = new pb::MessageParser<OutputInfo>(() => new OutputInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<OutputInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StepReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OutputInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OutputInfo(OutputInfo other) : this() {
    description_ = other.description_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OutputInfo Clone() {
    return new OutputInfo(this);
  }

  /// <summary>Field number for the "description" field.</summary>
  public const int DescriptionFieldNumber = 1;
  private string description_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Description {
    get { return description_; }
    set {
      description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as OutputInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(OutputInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Description != other.Description) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Description.Length != 0) hash ^= Description.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Description.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Description);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Description.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(OutputInfo other) {
    if (other == null) {
      return;
    }
    if (other.Description.Length != 0) {
      Description = other.Description;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Description = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
