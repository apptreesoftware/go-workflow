// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: pkg/cache/cache.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from pkg/cache/cache.proto</summary>
public static partial class CacheReflection {

  #region Descriptor
  /// <summary>File descriptor for pkg/cache/cache.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static CacheReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChVwa2cvY2FjaGUvY2FjaGUucHJvdG8idgoQQ2FjaGVQdXNoUmVxdWVzdBIK",
          "CgJpZBgBIAEoCRIQCghtZXRhZGF0YRgCIAEoDBIOCgZyZWNvcmQYAyABKAwS",
          "EQoJY2FjaGVOYW1lGAQgASgJEiEKC2Vudmlyb25tZW50GAUgASgLMgwuRW52",
          "aXJvbm1lbnQiEwoRQ2FjaGVQdXNoUmVzcG9uc2UiPQoLRW52aXJvbm1lbnQS",
          "CwoDYXBwGAEgASgJEhIKCndvcmtmbG93SWQYAiABKAkSDQoFcnVuSWQYAyAB",
          "KAkiVAoQQ2FjaGVQdWxsUmVxdWVzdBIKCgJpZBgBIAEoCRIRCgljYWNoZU5h",
          "bWUYAiABKAkSIQoLZW52aXJvbm1lbnQYAyABKAsyDC5FbnZpcm9ubWVudCI1",
          "ChFDYWNoZVB1bGxSZXNwb25zZRIOCgZyZWNvcmQYASABKAwSEAoIbWV0YWRh",
          "dGEYAiABKAwyZQoFQ2FjaGUSLQoEUHVzaBIRLkNhY2hlUHVzaFJlcXVlc3Qa",
          "Ei5DYWNoZVB1c2hSZXNwb25zZRItCgRQdWxsEhEuQ2FjaGVQdWxsUmVxdWVz",
          "dBoSLkNhY2hlUHVsbFJlc3BvbnNlQjJaMGdpdGh1Yi5jb20vYXBwdHJlZXNv",
          "ZnR3YXJlL2dvLXdvcmtmbG93L3BrZy9jYWNoZWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CachePushRequest), global::CachePushRequest.Parser, new[]{ "Id", "Metadata", "Record", "CacheName", "Environment" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CachePushResponse), global::CachePushResponse.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Environment), global::Environment.Parser, new[]{ "App", "WorkflowId", "RunId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CachePullRequest), global::CachePullRequest.Parser, new[]{ "Id", "CacheName", "Environment" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CachePullResponse), global::CachePullResponse.Parser, new[]{ "Record", "Metadata" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class CachePushRequest : pb::IMessage<CachePushRequest> {
  private static readonly pb::MessageParser<CachePushRequest> _parser = new pb::MessageParser<CachePushRequest>(() => new CachePushRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CachePushRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CacheReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePushRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePushRequest(CachePushRequest other) : this() {
    id_ = other.id_;
    metadata_ = other.metadata_;
    record_ = other.record_;
    cacheName_ = other.cacheName_;
    environment_ = other.environment_ != null ? other.environment_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePushRequest Clone() {
    return new CachePushRequest(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "metadata" field.</summary>
  public const int MetadataFieldNumber = 2;
  private pb::ByteString metadata_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Metadata {
    get { return metadata_; }
    set {
      metadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "record" field.</summary>
  public const int RecordFieldNumber = 3;
  private pb::ByteString record_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Record {
    get { return record_; }
    set {
      record_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "cacheName" field.</summary>
  public const int CacheNameFieldNumber = 4;
  private string cacheName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CacheName {
    get { return cacheName_; }
    set {
      cacheName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "environment" field.</summary>
  public const int EnvironmentFieldNumber = 5;
  private global::Environment environment_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Environment Environment {
    get { return environment_; }
    set {
      environment_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CachePushRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CachePushRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Metadata != other.Metadata) return false;
    if (Record != other.Record) return false;
    if (CacheName != other.CacheName) return false;
    if (!object.Equals(Environment, other.Environment)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (Metadata.Length != 0) hash ^= Metadata.GetHashCode();
    if (Record.Length != 0) hash ^= Record.GetHashCode();
    if (CacheName.Length != 0) hash ^= CacheName.GetHashCode();
    if (environment_ != null) hash ^= Environment.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (Metadata.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Metadata);
    }
    if (Record.Length != 0) {
      output.WriteRawTag(26);
      output.WriteBytes(Record);
    }
    if (CacheName.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(CacheName);
    }
    if (environment_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(Environment);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (Metadata.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Metadata);
    }
    if (Record.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Record);
    }
    if (CacheName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CacheName);
    }
    if (environment_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Environment);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CachePushRequest other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.Metadata.Length != 0) {
      Metadata = other.Metadata;
    }
    if (other.Record.Length != 0) {
      Record = other.Record;
    }
    if (other.CacheName.Length != 0) {
      CacheName = other.CacheName;
    }
    if (other.environment_ != null) {
      if (environment_ == null) {
        Environment = new global::Environment();
      }
      Environment.MergeFrom(other.Environment);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::UnknownFieldSet.MergeFieldFrom(ref _unknownFields, input)) {
            return;
          }
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 18: {
          Metadata = input.ReadBytes();
          break;
        }
        case 26: {
          Record = input.ReadBytes();
          break;
        }
        case 34: {
          CacheName = input.ReadString();
          break;
        }
        case 42: {
          if (environment_ == null) {
            Environment = new global::Environment();
          }
          input.ReadMessage(Environment);
          break;
        }
      }
    }
  }

}

public sealed partial class CachePushResponse : pb::IMessage<CachePushResponse> {
  private static readonly pb::MessageParser<CachePushResponse> _parser = new pb::MessageParser<CachePushResponse>(() => new CachePushResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CachePushResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CacheReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePushResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePushResponse(CachePushResponse other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePushResponse Clone() {
    return new CachePushResponse(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CachePushResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CachePushResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CachePushResponse other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::UnknownFieldSet.MergeFieldFrom(ref _unknownFields, input)) {
            return;
          }
          break;
      }
    }
  }

}

public sealed partial class Environment : pb::IMessage<Environment> {
  private static readonly pb::MessageParser<Environment> _parser = new pb::MessageParser<Environment>(() => new Environment());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Environment> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CacheReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Environment() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Environment(Environment other) : this() {
    app_ = other.app_;
    workflowId_ = other.workflowId_;
    runId_ = other.runId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Environment Clone() {
    return new Environment(this);
  }

  /// <summary>Field number for the "app" field.</summary>
  public const int AppFieldNumber = 1;
  private string app_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string App {
    get { return app_; }
    set {
      app_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "workflowId" field.</summary>
  public const int WorkflowIdFieldNumber = 2;
  private string workflowId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string WorkflowId {
    get { return workflowId_; }
    set {
      workflowId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "runId" field.</summary>
  public const int RunIdFieldNumber = 3;
  private string runId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RunId {
    get { return runId_; }
    set {
      runId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Environment);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Environment other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (App != other.App) return false;
    if (WorkflowId != other.WorkflowId) return false;
    if (RunId != other.RunId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (App.Length != 0) hash ^= App.GetHashCode();
    if (WorkflowId.Length != 0) hash ^= WorkflowId.GetHashCode();
    if (RunId.Length != 0) hash ^= RunId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (App.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(App);
    }
    if (WorkflowId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(WorkflowId);
    }
    if (RunId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(RunId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (App.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(App);
    }
    if (WorkflowId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkflowId);
    }
    if (RunId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RunId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Environment other) {
    if (other == null) {
      return;
    }
    if (other.App.Length != 0) {
      App = other.App;
    }
    if (other.WorkflowId.Length != 0) {
      WorkflowId = other.WorkflowId;
    }
    if (other.RunId.Length != 0) {
      RunId = other.RunId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::UnknownFieldSet.MergeFieldFrom(ref _unknownFields, input)) {
            return;
          }
          break;
        case 10: {
          App = input.ReadString();
          break;
        }
        case 18: {
          WorkflowId = input.ReadString();
          break;
        }
        case 26: {
          RunId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class CachePullRequest : pb::IMessage<CachePullRequest> {
  private static readonly pb::MessageParser<CachePullRequest> _parser = new pb::MessageParser<CachePullRequest>(() => new CachePullRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CachePullRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CacheReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePullRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePullRequest(CachePullRequest other) : this() {
    id_ = other.id_;
    cacheName_ = other.cacheName_;
    environment_ = other.environment_ != null ? other.environment_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePullRequest Clone() {
    return new CachePullRequest(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "cacheName" field.</summary>
  public const int CacheNameFieldNumber = 2;
  private string cacheName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CacheName {
    get { return cacheName_; }
    set {
      cacheName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "environment" field.</summary>
  public const int EnvironmentFieldNumber = 3;
  private global::Environment environment_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Environment Environment {
    get { return environment_; }
    set {
      environment_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CachePullRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CachePullRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (CacheName != other.CacheName) return false;
    if (!object.Equals(Environment, other.Environment)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (CacheName.Length != 0) hash ^= CacheName.GetHashCode();
    if (environment_ != null) hash ^= Environment.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (CacheName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CacheName);
    }
    if (environment_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Environment);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (CacheName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CacheName);
    }
    if (environment_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Environment);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CachePullRequest other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.CacheName.Length != 0) {
      CacheName = other.CacheName;
    }
    if (other.environment_ != null) {
      if (environment_ == null) {
        Environment = new global::Environment();
      }
      Environment.MergeFrom(other.Environment);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::UnknownFieldSet.MergeFieldFrom(ref _unknownFields, input)) {
            return;
          }
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 18: {
          CacheName = input.ReadString();
          break;
        }
        case 26: {
          if (environment_ == null) {
            Environment = new global::Environment();
          }
          input.ReadMessage(Environment);
          break;
        }
      }
    }
  }

}

public sealed partial class CachePullResponse : pb::IMessage<CachePullResponse> {
  private static readonly pb::MessageParser<CachePullResponse> _parser = new pb::MessageParser<CachePullResponse>(() => new CachePullResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CachePullResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CacheReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePullResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePullResponse(CachePullResponse other) : this() {
    record_ = other.record_;
    metadata_ = other.metadata_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CachePullResponse Clone() {
    return new CachePullResponse(this);
  }

  /// <summary>Field number for the "record" field.</summary>
  public const int RecordFieldNumber = 1;
  private pb::ByteString record_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Record {
    get { return record_; }
    set {
      record_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "metadata" field.</summary>
  public const int MetadataFieldNumber = 2;
  private pb::ByteString metadata_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Metadata {
    get { return metadata_; }
    set {
      metadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CachePullResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CachePullResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Record != other.Record) return false;
    if (Metadata != other.Metadata) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Record.Length != 0) hash ^= Record.GetHashCode();
    if (Metadata.Length != 0) hash ^= Metadata.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Record.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(Record);
    }
    if (Metadata.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Metadata);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Record.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Record);
    }
    if (Metadata.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Metadata);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CachePullResponse other) {
    if (other == null) {
      return;
    }
    if (other.Record.Length != 0) {
      Record = other.Record;
    }
    if (other.Metadata.Length != 0) {
      Metadata = other.Metadata;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::UnknownFieldSet.MergeFieldFrom(ref _unknownFields, input)) {
            return;
          }
          break;
        case 10: {
          Record = input.ReadBytes();
          break;
        }
        case 18: {
          Metadata = input.ReadBytes();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
