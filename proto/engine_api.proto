// API for a `remote` to communicate back to the `host` engine.
// Uses Twirp for communication
// The Authorization used is a JWT token that was given to
// the remote engine during the registration process.


syntax = "proto3";

option go_package = "github.com/apptreesoftware/go-workflow/pkg/core";

package core;

import "common.proto";

service EngineAPI {
    rpc AuthorizedPing (EmptyMessage) returns (EmptyMessage);
    rpc GetStepPackage (StepPackageRequest) returns (StepPackageResponse);

    rpc SpawnWorkflow (SpawnWorkflowRequest) returns (SpawnWorkflowResponse);

    rpc CachePush (CachePushRequest) returns (CachePushResponse);
    rpc CachePull (CachePullRequest) returns (CachePullResponse);


    rpc StepCompleted (StepCompleteRequest) returns (StepCompleteResponse);

    rpc LogMessage (LogRequest) returns (LogResponse);
}


message SpawnWorkflowRequest {
    Environment environment = 1;
    string workflow = 2;
    bytes input = 3;
}

message SpawnWorkflowResponse {
    string queueId = 1;
}

message StepCompleteRequest {
    Environment environment = 1;
    bytes output = 2;
    int64 exitCode = 3;
    string error = 4;
}

message StepCompleteResponse {

}

message LogRequest {
    string jobId = 1;
    string message = 2;
    string logLevel = 3;
    string project = 4;
    string workflow = 5;
}

message LogResponse {
    bool success = 1;
    string message = 2;
}