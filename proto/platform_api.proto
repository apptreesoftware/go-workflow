// Base Platform API, Uses Twirp for communication
// Only used for Customer environment -> AppTree Communication
// Uses Twirp for communication

syntax = "proto3";

option go_package = "github.com/apptreesoftware/go-workflow/pkg/core";

package core;

import "common.proto";
import "step_library.proto";

service EnvironmentManagement {
    rpc Ping (EmptyMessage) returns (BasicResponse);
    rpc CreateEnvironment (CreateEnvironmentRequest) returns (EnvironmentConfiguration);
    rpc DeleteEnvironment (EnvironmentRequest) returns (DeleteEnvironmentResponse);
    rpc UpdateEnvironment (UpdateEnvironmentRequest) returns (EnvironmentConfiguration);
    rpc GetEnvironment (EnvironmentRequest) returns (EnvironmentConfiguration);
    rpc UpdateAvailable (UpdateAvailableRequest) returns (UpdateAvailableResponse);

    rpc CreateProject (Project) returns (BasicResponse);
    rpc GetProject (ProjectRequest) returns (Project);
    rpc GetProjectWithEnvironment (ProjectRequest) returns (ProjectWithEnvironment);
    rpc AddUserToProject (AddUserRequest) returns (BasicResponse);
    rpc AddSuperUser (UserRequest) returns (BasicResponse);
    rpc ListProjects (ListProjectRequest) returns (ListProjectResponse);
    rpc GetProjectSecret (ProjectRequest) returns (SecretResponse);
    rpc UpdateProjectSecret (ProjectRequest) returns (SecretResponse);

    rpc GetAssistantConfig (ConfigRequest) returns (AssistantRequest);
    rpc UpdateAssistantConfig (AssistantRequest) returns (AssistantRequest);

    rpc ValidateProjectAccess (ProjectRequest) returns (BasicResponse);
    rpc ValidateEnvironmentAccess (EnvironmentRequest) returns (BasicResponse);
}

message EnvironmentConfiguration {
    string environmentName = 1;
    string resourcePlan = 2;
    string region = 3;
    string url = 4;
    EnvironmentStatus status = 5;
    string statusMessage = 6;
}

message UpdateEnvironmentRequest {
    string environmentName = 1;
    string resourcePlan = 2;
    EnvironmentStatus status = 3;
    string url = 4;
    string statusMessage = 5;
}

message EnvironmentRequest {
    string environmentName = 1;
}

message CreateEnvironmentRequest {
    string environmentName = 1;
    string resourcePlan = 2;
    string region = 3;
}

message DeleteEnvironmentResponse {

}

enum EnvironmentStatus {
    Creating = 0;
    Ready = 1;
    Failed = 2;
    Upgrading = 3;
}

message UpdateAvailableRequest {
    string os = 1;
    string arch = 2;
    string version = 3;
}

message UpdateAvailableResponse {
    bool available = 1;
    string version = 2;
    string url = 3;
}

message Project {
    string id = 1;
    string environment = 2;
    string description = 3;
}

message ListProjectRequest {
    string environment = 1;
}

message ListProjectResponse {
    bool success = 1;
    string message = 2;
    repeated Project projects = 3;
}

message AddUserRequest {
    string username = 1;
    string projectId = 2;
}

message UserRequest {
    string username = 1;
}

message ProjectWithEnvironment {
    Project project = 1;
    EnvironmentConfiguration environment = 2;
}

message MoveProjectRequest {
    string project = 1;
    string environment = 2;
}

message ConfigRequest {
    string id = 1;
}

message SecretResponse {
    string secretKey = 1;
}

message AssistantRequest {
    // @inject_tag: firestore:"-"
    string id = 1;
    // @inject_tag: firestore:"name"
    string name = 2;
    // @inject_tag: firestore:"description"
    string description = 3;
    // @inject_tag: firestore:"avatarUrl"
    string avatarUrl = 4;
    // @inject_tag: firestore:"intentDiscoveryUrl"
    string intentDiscoveryUrl = 5;
    // @inject_tag: firestore:"debugDiscoveryUrl"
    string debugDiscoveryUrl = 6;
}