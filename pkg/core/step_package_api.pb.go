// Code generated by protoc-gen-go. DO NOT EDIT.
// source: step_package_api.proto

package core // import "github.com/apptreesoftware/go-workflow/pkg/core"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RegisteredPackage struct {
	PackageDefinition    *Package `protobuf:"bytes,1,opt,name=packageDefinition,proto3" json:"packageDefinition,omitempty"`
	LocationType         string   `protobuf:"bytes,2,opt,name=locationType,proto3" json:"locationType,omitempty"`
	Location             string   `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	PublishId            string   `protobuf:"bytes,4,opt,name=publishId,proto3" json:"publishId,omitempty"`
	Author               string   `protobuf:"bytes,5,opt,name=author,proto3" json:"author,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-" bson:"-"`
}

func (m *RegisteredPackage) Reset()         { *m = RegisteredPackage{} }
func (m *RegisteredPackage) String() string { return proto.CompactTextString(m) }
func (*RegisteredPackage) ProtoMessage()    {}
func (*RegisteredPackage) Descriptor() ([]byte, []int) {
	return fileDescriptor_step_package_api_7089ae41b3253a1d, []int{0}
}
func (m *RegisteredPackage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisteredPackage.Unmarshal(m, b)
}
func (m *RegisteredPackage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisteredPackage.Marshal(b, m, deterministic)
}
func (dst *RegisteredPackage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisteredPackage.Merge(dst, src)
}
func (m *RegisteredPackage) XXX_Size() int {
	return xxx_messageInfo_RegisteredPackage.Size(m)
}
func (m *RegisteredPackage) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisteredPackage.DiscardUnknown(m)
}

var xxx_messageInfo_RegisteredPackage proto.InternalMessageInfo

func (m *RegisteredPackage) GetPackageDefinition() *Package {
	if m != nil {
		return m.PackageDefinition
	}
	return nil
}

func (m *RegisteredPackage) GetLocationType() string {
	if m != nil {
		return m.LocationType
	}
	return ""
}

func (m *RegisteredPackage) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *RegisteredPackage) GetPublishId() string {
	if m != nil {
		return m.PublishId
	}
	return ""
}

func (m *RegisteredPackage) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func init() {
	proto.RegisterType((*RegisteredPackage)(nil), "core.RegisteredPackage")
}

func init() {
	proto.RegisterFile("step_package_api.proto", fileDescriptor_step_package_api_7089ae41b3253a1d)
}

var fileDescriptor_step_package_api_7089ae41b3253a1d = []byte{
	// 475 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x40, 0x15, 0x48, 0x0b, 0x9d, 0x16, 0x4a, 0x17, 0x51, 0x8c, 0x89, 0xd4, 0xa8, 0xa7, 0x5e,
	0x88, 0x45, 0x39, 0x70, 0xe0, 0x80, 0x88, 0x28, 0x51, 0xa4, 0x82, 0x2a, 0xa7, 0x5c, 0xb8, 0x54,
	0x1b, 0x67, 0xe2, 0xac, 0x62, 0x7b, 0x96, 0xdd, 0x8d, 0x22, 0xff, 0x20, 0x5f, 0xc4, 0x07, 0x20,
	0x7b, 0xd7, 0xb5, 0x1b, 0x27, 0xe2, 0x96, 0x99, 0x37, 0xf3, 0x66, 0x76, 0x92, 0xc0, 0xa9, 0x36,
	0x28, 0xef, 0x24, 0x8f, 0x96, 0x3c, 0xc6, 0x3b, 0x2e, 0xc5, 0x40, 0x2a, 0x32, 0xc4, 0xba, 0x11,
	0x29, 0xf4, 0x8f, 0x22, 0x4a, 0x53, 0xca, 0x6c, 0xce, 0x67, 0x65, 0x6d, 0x22, 0xa6, 0x8a, 0xab,
	0xdc, 0xe6, 0xce, 0xff, 0x74, 0xe0, 0x24, 0xc4, 0x58, 0x68, 0x83, 0x0a, 0x67, 0x37, 0xd6, 0xc3,
	0x3e, 0xc1, 0x89, 0x53, 0x7e, 0xc5, 0xb9, 0xc8, 0x84, 0x11, 0x94, 0x79, 0x9d, 0x7e, 0xe7, 0xe2,
	0xf0, 0xf2, 0xd9, 0xa0, 0x30, 0x0f, 0x5c, 0x65, 0xd8, 0xae, 0x63, 0xe7, 0x70, 0x94, 0x50, 0xc4,
	0x8b, 0xcf, 0xb7, 0xb9, 0x44, 0xef, 0x51, 0xbf, 0x73, 0x71, 0x10, 0x3e, 0xc8, 0x31, 0x1f, 0x9e,
	0x56, 0xb1, 0xf7, 0xb8, 0xe4, 0xf7, 0x31, 0xeb, 0xc1, 0x81, 0x5c, 0x4d, 0x13, 0xa1, 0x17, 0xe3,
	0x99, 0xd7, 0x2d, 0x61, 0x9d, 0x60, 0xa7, 0xb0, 0xcf, 0x57, 0x66, 0x41, 0xca, 0xdb, 0x2b, 0x91,
	0x8b, 0x2e, 0xff, 0xee, 0xc1, 0x8b, 0x89, 0x41, 0xe9, 0x16, 0x9b, 0x18, 0x52, 0xc8, 0x02, 0xe8,
	0xde, 0x88, 0x2c, 0x66, 0xcc, 0x2e, 0x7d, 0x95, 0x4a, 0x93, 0x7f, 0x47, 0xad, 0x79, 0x8c, 0xfe,
	0x4b, 0x9b, 0x1b, 0x72, 0x2d, 0xa2, 0x10, 0xb5, 0xa4, 0x4c, 0x23, 0xfb, 0x08, 0xc7, 0xd5, 0x35,
	0xaa, 0x5b, 0xbc, 0xb6, 0x75, 0xad, 0x23, 0xf9, 0x87, 0x0d, 0x29, 0xfb, 0x0c, 0x30, 0x42, 0x53,
	0xf5, 0x78, 0x16, 0x35, 0xf6, 0x09, 0xf1, 0xf7, 0x0a, 0xb5, 0xf1, 0x77, 0xd9, 0xd8, 0x15, 0x3c,
	0xaf, 0x05, 0xc3, 0x7c, 0x3c, 0x63, 0x7e, 0x4b, 0x32, 0x9e, 0xfd, 0x57, 0x33, 0x84, 0x27, 0x23,
	0x34, 0x45, 0x4f, 0xd5, 0x5f, 0x84, 0x22, 0x8b, 0x13, 0x2c, 0x92, 0x55, 0xff, 0xdb, 0xad, 0xcc,
	0x1d, 0xe1, 0x1a, 0x5e, 0x4d, 0x90, 0xab, 0x68, 0x51, 0x64, 0xf5, 0x37, 0x52, 0xd7, 0xf6, 0x27,
	0x73, 0xff, 0xac, 0x1a, 0x56, 0xbe, 0x37, 0x5b, 0x48, 0x6d, 0x1b, 0xa1, 0xf9, 0x92, 0x24, 0x3b,
	0x6c, 0x0d, 0xb8, 0x61, 0x7b, 0x40, 0x9c, 0xed, 0x16, 0x8e, 0xeb, 0x33, 0x95, 0x88, 0x9d, 0xd5,
	0x6f, 0x71, 0x13, 0x36, 0x6e, 0xde, 0xdf, 0x5d, 0xe0, 0xac, 0x1c, 0x7a, 0x76, 0x98, 0x03, 0x3f,
	0x78, 0x8a, 0xcd, 0x55, 0xcf, 0x9a, 0x0b, 0xb9, 0x1a, 0x3d, 0xce, 0xe6, 0xd4, 0x1e, 0xd1, 0x2a,
	0x70, 0x23, 0x7e, 0x82, 0x57, 0x2f, 0x5e, 0x90, 0x86, 0xbe, 0xfe, 0x36, 0x1a, 0xbc, 0x52, 0xf7,
	0xb6, 0x43, 0xab, 0x1d, 0xbe, 0xff, 0x15, 0xc4, 0xc2, 0x2c, 0x56, 0xd3, 0x41, 0x44, 0x69, 0xc0,
	0xa5, 0x34, 0x0a, 0x51, 0xd3, 0xdc, 0xac, 0xb9, 0xc2, 0x20, 0xa6, 0x77, 0x6b, 0x52, 0xcb, 0x79,
	0x42, 0xeb, 0x40, 0x2e, 0xe3, 0xa0, 0x30, 0x4d, 0xf7, 0xcb, 0x7f, 0xfe, 0x87, 0x7f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x9a, 0xf1, 0x3f, 0xb7, 0x3b, 0x04, 0x00, 0x00,
}
